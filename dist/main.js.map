{"version":3,"file":"main.js","mappings":"qCAGA,MAAMA,EAASC,SAASC,eAAe,UACjCC,EAAUH,EAAOI,WAAW,MAClCJ,EAAOK,MAAQ,IACfL,EAAOM,OAAS,IAChBH,EAAQI,SAAS,GAAI,GAAIP,EAAOK,MAAOL,EAAOM,QAE9CL,SAASO,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAS,ICRjB,MAEEC,YAAYP,EAASH,GACnBW,KAAKC,SAAW,CACdC,EAAG,IACHC,EAAG,KAELH,KAAKI,SAAW,CACdF,EAAG,EACHC,EAAG,GAELH,KAAKN,MAAQ,GACbM,KAAKL,OAAS,GACdK,KAAKR,QAAUA,EACfQ,KAAKX,OAASA,EAEdW,KAAKK,KAAO,CACVC,MAAO,CACLC,SAAS,GAEXC,KAAM,CACJD,SAAS,IAGbE,OAAOZ,iBAAiB,WAAWa,IAAe,IAAd,QAACC,GAAQD,EAC3C,OAAQC,GACN,KAAK,GACHC,QAAQC,IAAI,QACZb,KAAKK,KAAKG,KAAKD,SAAU,EACzB,MACF,KAAK,GACHK,QAAQC,IAAI,QACZ,MACF,KAAK,GACHD,QAAQC,IAAI,SACZb,KAAKK,KAAKC,MAAMC,SAAU,EAC1B,MACF,KAAK,GACHK,QAAQC,IAAI,MACZb,KAAKI,SAASD,GAAK,GACd,IAIXM,OAAOZ,iBAAiB,SAASiB,IAAe,IAAd,QAACH,GAAQG,EACzC,OAAQH,GACN,KAAK,GACHC,QAAQC,IAAI,QACZb,KAAKK,KAAKG,KAAKD,SAAU,EACzB,MACF,KAAK,GACHK,QAAQC,IAAI,QACZ,MACF,KAAK,GACHD,QAAQC,IAAI,SACZb,KAAKK,KAAKC,MAAMC,SAAU,EAC1B,MACF,KAAK,GACHK,QAAQC,IAAI,MACZb,KAAKI,SAASD,GAAK,GACd,GAIb,CAEAY,OACEf,KAAKR,QAAQwB,UAAW,MACxBhB,KAAKR,QAAQI,SACXI,KAAKC,SAASC,EACdF,KAAKC,SAASE,EACdH,KAAKN,MACLM,KAAKL,OAET,CAEAsB,SACEjB,KAAKC,SAASE,GAAKH,KAAKI,SAASD,EACjCH,KAAKC,SAASC,GAAKF,KAAKI,SAASF,EACjCF,KAAKe,OACDf,KAAKC,SAASE,EAAIH,KAAKL,OAASK,KAAKI,SAASD,GAAKH,KAAKX,OAAOM,OACjEK,KAAKI,SAASD,GAnFJ,GAqFVH,KAAKI,SAASD,EAAI,CAEtB,CAEAe,UACE,IAAIC,EAAYnB,KAAKkB,QAAQE,KAAKpB,MAClCqB,sBAAsBF,GACtBnB,KAAKR,QAAQ8B,UAAU,EAAG,EAAGtB,KAAKX,OAAOK,MAAOM,KAAKX,OAAOM,QAC5DK,KAAKiB,SACDjB,KAAKK,KAAKC,MAAMC,QAClBP,KAAKI,SAASF,EAAI,EACTF,KAAKK,KAAKG,KAAKD,QACxBP,KAAKI,SAASF,GAAK,EAEnBF,KAAKI,SAASF,EAAI,CAEtB,GD3F0BV,EAASH,GAClB,IEXnB,MAEEU,YAAYP,EAASH,GACnBW,KAAKC,SAAW,CACdC,EAAG,IACHC,EAAG,KAGLH,KAAKN,MAAQ,IACbM,KAAKL,OAAS,GACdK,KAAKR,QAAUA,EACfQ,KAAKX,OAASA,CAChB,CAEA0B,OACEf,KAAKR,QAAQwB,UAAW,OACxBhB,KAAKR,QAAQI,SACXI,KAAKC,SAASC,EACdF,KAAKC,SAASE,EACdH,KAAKN,MACLM,KAAKL,OAET,GFX8BH,EAASH,GAC9B0B,OACTjB,EAAOoB,SAAS,G","sources":["webpack://supertopia/./src/index.js","webpack://supertopia/./src/scripts/player.js","webpack://supertopia/./src/scripts/terrain.js"],"sourcesContent":["import Player from \"./scripts/player\";\nimport Platform from \"./scripts/terrain\";\n\nconst canvas = document.getElementById(\"canvas\");\nconst context = canvas.getContext(\"2d\");\ncanvas.width = 800;\ncanvas.height = 600;\ncontext.fillRect(30, 30, canvas.width, canvas.height);\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const player = new Player(context, canvas);\n  const platform = new Platform(context, canvas)\n  platform.draw();\n  player.animate();\n});\n","const gravity = 0.5;\n\nclass Player {\n\n  constructor(context, canvas) {\n    this.position = {\n      x: 100,\n      y: 100\n    }\n    this.velocity = {\n      x: 0,\n      y: 0\n    }\n    this.width = 30\n    this.height = 30\n    this.context = context\n    this.canvas = canvas\n\n    this.keys = {\n      right: {\n        pressed: false\n      },\n      left: {\n        pressed: false\n      }\n    }\n    window.addEventListener(\"keydown\", ({keyCode}) => {\n      switch (keyCode) {\n        case 65:\n          console.log(\"left\")\n          this.keys.left.pressed = true\n          break\n        case 83:\n          console.log(\"down\")\n          break\n        case 68:\n          console.log(\"right\")\n          this.keys.right.pressed = true\n          break\n        case 87:\n          console.log(\"up\")\n          this.velocity.y -= 10\n          break\n      }\n    });\n\n    window.addEventListener(\"keyup\", ({keyCode}) => {\n      switch (keyCode) {\n        case 65:\n          console.log(\"left\")\n          this.keys.left.pressed = false\n          break\n        case 83:\n          console.log(\"down\")\n          break\n        case 68:\n          console.log(\"right\")\n          this.keys.right.pressed = false\n          break\n        case 87:\n          console.log(\"up\")\n          this.velocity.y -= 10\n          break\n      }\n    });\n\n  }\n\n  draw() {\n    this.context.fillStyle ='red';\n    this.context.fillRect(\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n      );\n  }\n\n  update () {\n    this.position.y += this.velocity.y\n    this.position.x += this.velocity.x\n    this.draw();\n    if (this.position.y + this.height + this.velocity.y <= this.canvas.height) {\n      this.velocity.y += gravity;\n    } else {\n      this.velocity.y = 0\n    }\n  }\n\n  animate() {\n    let boundFunc = this.animate.bind(this)\n    requestAnimationFrame(boundFunc);\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.update();\n    if (this.keys.right.pressed) {\n      this.velocity.x = 5\n    } else if (this.keys.left.pressed) {\n      this.velocity.x = -5\n    } else {\n      this.velocity.x = 0\n    }\n  }\n\n}\n\n\nexport default Player;\n","class Platform {\n\n  constructor(context, canvas) {\n    this.position = {\n      x: 300,\n      y: 500\n    }\n\n    this.width = 200\n    this.height = 20\n    this.context = context\n    this.canvas = canvas\n  }\n\n  draw() {\n    this.context.fillStyle ='blue';\n    this.context.fillRect(\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n      );\n  }\n  \n}\n\nexport default Platform;"],"names":["canvas","document","getElementById","context","getContext","width","height","fillRect","addEventListener","player","constructor","this","position","x","y","velocity","keys","right","pressed","left","window","_ref","keyCode","console","log","_ref2","draw","fillStyle","update","animate","boundFunc","bind","requestAnimationFrame","clearRect"],"sourceRoot":""}